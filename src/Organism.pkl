import "Core.pkl" as core

const RefSeqRegex = Regex("^GCF_[0-9]+.[0-9]")
const GenBankRegex = Regex("^GCA_[0-9]+.[0-9]")

class GenomeAssembly {
    accession: String(this.matches(RefSeqRegex) || this.matches(GenBankRegex))
    isReference: Boolean

    hidden isRefSeqMatchesAccession = (_) ->
        if (isReference && !determineIsReference(accession))
            throw("GenomeAssemblies that set 'isReference' to true must use the RefSeq (GCF_*) identifier for 'accession'.")
        else true
}

function determineIsReference(accession: String): Boolean = accession.matches(RefSeqRegex)

function buildGenomeAssemblyListing(accessions: Listing<String>): 
    Listing<GenomeAssembly> = 
    new Listing {
        for (_accession in accessions) {
            new GenomeAssembly{
                accession = _accession
                isReference = determineIsReference(_accession) 
            }
        }
    }

class Organism {
    name: String
    tags: Listing<String>
    assemblies: Listing<GenomeAssembly>
    attributes: core.OrganismWorkflowMapAnnotation
}

genomes: Listing<GenomeAssembly>
organisms: Listing<Organism>